# Valores únicos
apply(students,2, function(x) length(unique(x)))
par(mfrow=c(1,3))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
boxplot(students[,i], main = colnames(students)[i], width = 100)
}
}
length(boxplot.stats(students[,c("traveltime")])$out)
students = students[students$traveltime<=3,]
nrow(students[students$freetime==1,])
table(students$famrel)
students$famrel[students$famrel == 1] <- 4
length(boxplot.stats(students[,c("absences")])$out)
boxplot.stats(students[,c("absences")])$out
students[students$absences>=40,]
nrow(students[students$absences>=40,])
students = students[students$absences<40,]
# Agrupación por sexo de los estudiantes
students.male <- students[students$sex == "M",]
students.female <- students[students$sex == "F",]
# Agrupación por si reciben clases particules pagadas o no
students.paid <- students[students$paid == "yes",]
students.nopaid <- students[students$paid == "no",]
# Agrupación por si reciben soporte por parte de la familia
students.famsup <- students[students$famsup == "yes",]
students.nofamsup <- students[students$famsup == "no",]
# Agrupación por si reciben ayuda extra escolar
students.schoolsup <- students[students$schoolsup == "yes",]
students.noschoolsup <- students[students$schoolsup == "no",]
# Agrupación por tiempo dedicado al estudio
students.studytime <- students[students$studytime >= 3,]
students.nostudytime <- students[students$studytime < 3,]
# Agrupación por estudios de los padres
students.parentedu <- students[(students$Medu >= 3) | (students$Fedu >= 3),]
students.parentnoedu <- students[(students$Medu < 3) & (students$Fedu < 3),]
# Agrupación por edad
students.mayores <- students[students$age >= 16,]
students.menores <- students[students$age < 16,]
fig1 = ggplot(students,aes(x=sex,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=sex,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=paid,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=paid,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=paid,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=paid,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
# Tests de normalidad
library(nortest)
# Función que aplica distintos test de homogeneidad sobre los datos de entrada
normTest <- function(data, name, alpha = 0.05) {
ad_val = (ad.test(data)$p.value > alpha) # Anderson-Darling test
ks_val = (ks.test(data, pnorm, mean(data), sd(data))$p.value > alpha) # Kolmogorov-Smirnov test
sh_val = (shapiro.test(data)$p.value > alpha) # Shapiro test
csv_val = (cvm.test(data)$p.value > alpha) # Cramer-von Mises test
#cat(name)
#cat("\t")
#cat(ad_val,ks_val,sh_val,csv_val,"\t")
#cat("\n")
return (c(name,ad_val,ks_val,sh_val,csv_val))
}
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(data = c("","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises"),
nrow = 1, ncol = 5)
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
View(test_matrix)
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(data = c("","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises"),
nrow = 1, ncol = 5)
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
test_matrix
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
test_matrix
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
test_matrix
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
plot.matrix(test_matrix)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
print(test_matrix)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
print.matrix(test_matrix)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
print(test_matrix)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
head(test_matrix)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
print(test_matrix)
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
print(test_matrix)
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
#print(test_matrix)
data.frame(test_matrix)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
data.frame(test_matrix)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
knitr::opts_chunk$set(eval=T, echo=T)
library(knitr)
library(lubridate)
library(stringr)
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(plyr)
library(cowplot)
library(colorspace)
library(mlbench)
library(caret)
library(car)
library(DescTools)
sMat=read.table("data/student-mat.csv",sep=",",header=TRUE)
sPor=read.table("data/student-por.csv",sep=",",header=TRUE)
# Según el propietario de los datos, los alumnos que están presentes en ambas asignaturas
# pueden ser identificados por los siguientes atributos
sBoth=merge(sMat,sPor,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
# school, sex, age, address, famsize, Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery, internet
# traveltime, studytime, failures, schoolsup, famsup, paid, activities, higher, romantic, famrel
# freetime, goout, Dalc, Walc, health, absences, subject
sMat$id = paste(sMat$school,sMat$sex,sMat$age,sMat$address,sMat$famsize,sMat$Pstatus,sMat$Medu,sMat$Fedu,sMat$Mjob,sMat$Fjob,sMat$reason,sMat$nursery,sMat$internet, sep="-")
sPor$id = paste(sPor$school,sPor$sex,sPor$age,sPor$address,sPor$famsize,sPor$Pstatus,sPor$Medu,sPor$Fedu,sPor$Mjob,sPor$Fjob,sPor$reason,sPor$nursery,sPor$internet, sep="-")
sMat$score = rowMeans(subset(sMat, select = c(G1, G2, G3)), na.rm = TRUE)
sMat$mark<-sMat$score
sMat$mark[sMat$score<10] <- "fail"
sMat$mark[sMat$score>=10] <- "pass"
sMat$mark <- as.factor(sMat$mark)
sMat$calification <- sMat$score
sMat$calification[(sMat$score<=20) & (sMat$score>=16)] <- "A"
sMat$calification[(sMat$score<16) & (sMat$score>=14)] <- "B"
sMat$calification[sMat$score<14 & sMat$score>=12] <- "C"
sMat$calification[sMat$score<12 & sMat$score>=10] <- "D"
sMat$calification[sMat$score<10] <- "F"
sMat$calification <- as.factor(sMat$calification)
sPor$score = rowMeans(subset(sPor, select = c(G1, G2, G3)), na.rm = TRUE)
sPor$mark<-sPor$score
sPor$mark[sPor$score<10] <- "fail"
sPor$mark[sPor$score>=10] <- "pass"
sPor$mark <- as.factor(sPor$mark)
sPor$calification <- sPor$score
sPor$calification[(sPor$score<=20) & (sPor$score>=16)] <- "A"
sPor$calification[(sPor$score<16) & (sPor$score>=14)] <- "B"
sPor$calification[sPor$score<14 & sPor$score>=12] <- "C"
sPor$calification[sPor$score<12 & sPor$score>=10] <- "D"
sPor$calification[sPor$score<10] <- "F"
sPor$calification <- as.factor(sPor$calification)
sMat$subject = 'Math'
sPor$subject = 'Portuguese'
students = rbind(sMat,sPor)
students$subject = as.factor(students$subject)
students = transform(students, id=as.numeric(factor(id)))
students$id = as.factor(students$id)
# Resumen
glimpse(students)
nro_factors = 0
nro_numeric = 0
for (i in 1:ncol(students)) {
if (is.factor(students[,i])) nro_factors=nro_factors+1 else nro_numeric=nro_numeric+1
}
# Estadísticas básicas
summary(students)
# Con datos nulos
colSums(is.na(students))
# Con datos ""
colSums(students=="")
colSums(students==0)
# Valores únicos
apply(students,2, function(x) length(unique(x)))
par(mfrow=c(1,3))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
boxplot(students[,i], main = colnames(students)[i], width = 100)
}
}
length(boxplot.stats(students[,c("traveltime")])$out)
students = students[students$traveltime<=3,]
nrow(students[students$freetime==1,])
table(students$famrel)
students$famrel[students$famrel == 1] <- 4
length(boxplot.stats(students[,c("absences")])$out)
boxplot.stats(students[,c("absences")])$out
students[students$absences>=40,]
nrow(students[students$absences>=40,])
students = students[students$absences<40,]
# Agrupación por sexo de los estudiantes
students.male <- students[students$sex == "M",]
students.female <- students[students$sex == "F",]
# Agrupación por si reciben clases particules pagadas o no
students.paid <- students[students$paid == "yes",]
students.nopaid <- students[students$paid == "no",]
# Agrupación por si reciben soporte por parte de la familia
students.famsup <- students[students$famsup == "yes",]
students.nofamsup <- students[students$famsup == "no",]
# Agrupación por si reciben ayuda extra escolar
students.schoolsup <- students[students$schoolsup == "yes",]
students.noschoolsup <- students[students$schoolsup == "no",]
# Agrupación por tiempo dedicado al estudio
students.studytime <- students[students$studytime >= 3,]
students.nostudytime <- students[students$studytime < 3,]
# Agrupación por estudios de los padres
students.parentedu <- students[(students$Medu >= 3) | (students$Fedu >= 3),]
students.parentnoedu <- students[(students$Medu < 3) & (students$Fedu < 3),]
# Agrupación por edad
students.mayores <- students[students$age >= 16,]
students.menores <- students[students$age < 16,]
fig1 = ggplot(students,aes(x=sex,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=sex,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=studytime,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=schoolsup,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=paid,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=paid,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=paid,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=paid,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")
fig2 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar()+ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar(position="fill")+ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=famsup,fill=calification))+geom_bar()+ylab("Frecuencia")+facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
# Tests de normalidad
library(nortest)
# Función que aplica distintos test de homogeneidad sobre los datos de entrada
normTest <- function(data, name, alpha = 0.05) {
ad_val = (ad.test(data)$p.value > alpha) # Anderson-Darling test
ks_val = (ks.test(data, pnorm, mean(data), sd(data))$p.value > alpha) # Kolmogorov-Smirnov test
sh_val = (shapiro.test(data)$p.value > alpha) # Shapiro test
csv_val = (cvm.test(data)$p.value > alpha) # Cramer-von Mises test
#cat(name)
#cat("\t")
#cat(ad_val,ks_val,sh_val,csv_val,"\t")
#cat("\n")
return (c(name,ad_val,ks_val,sh_val,csv_val))
}
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
library(gridExtra)
grid.table(data.frame(test_matrix))
dev.off()
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
library(gridExtra)
grid.table(data.frame(test_matrix))
knit_with_parameters('~/GitHub/M2851_Practica2/Practica2.Rmd', encoding = 'UTF-8')
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
data.frame(test_matrix)
pander::pander(data.frame(test_matrix), split.table = 60)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
data.frame(test_matrix)
library(pander)
install.packages("pander")
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
data.frame(test_matrix)
library(pander)
pander::pander(data.frame(test_matrix), split.table = 60)
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
test_matrix <- rbind(test_matrix, normTest(students.female[,c("score")], "score~female"))
test_matrix <- rbind(test_matrix, normTest(students.male[,c("score")], "score~male"))
test_matrix <- rbind(test_matrix, normTest(students.studytime[,c("score")], "score~studytime"))
test_matrix <- rbind(test_matrix, normTest(students.nostudytime[,c("score")], "score~nostudytime"))
test_matrix <- rbind(test_matrix, normTest(students.mayores[,c("score")], "score~mayores"))
test_matrix <- rbind(test_matrix, normTest(students.menores[,c("score")], "score~menores"))
test_matrix <- rbind(test_matrix, normTest(students.paid[,c("score")], "score~paid"))
test_matrix <- rbind(test_matrix, normTest(students.nopaid[,c("score")], "score~nopaid"))
test_matrix <- rbind(test_matrix, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
test_matrix <- rbind(test_matrix, normTest(students.famsup[,c("score")], "score~famsup"))
test_matrix <- rbind(test_matrix, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
#data.frame(test_matrix)
library(pander)
pander::pander(data.frame(test_matrix), split.table = 180)
col.names = colnames(students)
#cat("Distribucion normal: \n")
test_matrix <- matrix(NA, nrow = 0, ncol = 5)
colnames(test_matrix) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov","Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
test_matrix <- rbind(test_matrix, normTest(students[,i], col.names[i]))
}
}
pander::pander(data.frame(test_matrix), split.table = 180)

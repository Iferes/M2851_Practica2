grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=famsup,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje") +
facet_wrap(~sex )
fig2 = ggplot(students,aes(x=famsup,fill=calification)) +
geom_bar() +
ylab("Frecuencia") +
facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
# Tests de normalidad
library(nortest)
# Función que aplica distintos test de normalidad sobre los datos de entrada
normTest <- function(data, name, alpha = 0.05) {
# Anderson-Darling test
ad_val = (ad.test(data)$p.value > alpha)
# Kolmogorov-Smirnov test
ks_val = (ks.test(data, pnorm, mean(data), sd(data))$p.value > alpha)
# Shapiro test
sh_val = (shapiro.test(data)$p.value > alpha)
# Cramer-von Mises test
csv_val = (cvm.test(data)$p.value > alpha)
return (c(name,ad_val,ks_val,sh_val,csv_val))
}
col.names = colnames(students)
tmat <- matrix(NA, nrow = 0, ncol = 5)
colnames(tmat) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov",
"Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
tmat <- rbind(tmat, normTest(students[,i], col.names[i]))
}
}
pander::pander(data.frame(tmat), split.table = 180)
tmat <- matrix(NA, nrow = 0, ncol = 5)
colnames(tmat) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov",
"Shapiro","Cramer-von Mises")
tmat <- rbind(tmat, normTest(students.female[,c("score")],"score~female"))
tmat <- rbind(tmat, normTest(students.male[,c("score")],"score~male"))
tmat <- rbind(tmat, normTest(students.studytime[,c("score")],"score~studytime"))
tmat <- rbind(tmat, normTest(students.nostudytime[,c("score")],"score~nostudytime"))
tmat <- rbind(tmat, normTest(students.mayores[,c("score")], "score~mayores"))
tmat <- rbind(tmat, normTest(students.menores[,c("score")], "score~menores"))
tmat <- rbind(tmat, normTest(students.paid[,c("score")], "score~paid"))
tmat <- rbind(tmat, normTest(students.nopaid[,c("score")], "score~nopaid"))
tmat <- rbind(tmat, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
tmat <- rbind(tmat, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
tmat <- rbind(tmat, normTest(students.famsup[,c("score")], "score~famsup"))
tmat <- rbind(tmat, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
pander::pander(data.frame(tmat), split.table = 180)
fligner.test(score ~ sex, data = students)
fligner.test(score ~ paid, data = students)
fligner.test(score ~ schoolsup, data = students)
fligner.test(score ~ famsup, data = students)
fligner.test(x = list(students.menores$score,students.mayores$score))
fligner.test(x = list(students.nostudytime$score,students.studytime$score))
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,1), 1))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,1), 2))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,1,1,1), 2))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,2,1,1), 2))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,2,1,1), 1))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,1)))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,1),2))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,1,1,1),2))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
#par(mfrow=c(1,2))
layout(matrix(c(1,2),1))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
layout(matrix(c(1,2),1))
plotNormHistogram(students.female[,c("score")], "score~sex")
plotNormHistogram(students.male[,c("score")], "score~sex")
plotNormHistogram(students.studytime[,c("score")], "score~studytime")
plotNormHistogram(students.nostudytime[,c("score")], "score~studytime")
plotNormHistogram(students.mayores[,c("score")], "score~mayores")
plotNormHistogram(students.menores[,c("score")], "score~menores")
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
layout(matrix(c(1,2),1), heights=c(2,2))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
layout(matrix(c(1,2),1), heights=c(1.5,1.5))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
layout(matrix(c(1,2),1), heights=c(.5,.5))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
cormat <- matrix(NA, nrow = 0, ncol = 2)
colnames(cormat) <- c("Attribute","spearman")
tmat <- rbind(tmat, c("", cor(x = students$G1, y = log10(students$G2), method = "spearman")))
cormat <- matrix(NA, nrow = 0, ncol = 2)
colnames(cormat) <- c("Attribute","spearman")
cormat <- rbind(cormat, c("", cor(x = students$G1, y = log10(students$G2), method = "spearman")))
cormat <- matrix(NA, nrow = 0, ncol = 2)
colnames(cormat) <- c("Attribute","spearman")
cormat <- rbind(cormat, c("G1 ~ G2", cor(x = students$G1, y = log10(students$G2), method = "spearman")))
knitr::opts_chunk$set(eval=T, echo=T)
library(knitr)
library(lubridate)
library(stringr)
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(plyr)
library(cowplot)
library(colorspace)
library(mlbench)
library(caret)
library(car)
library(DescTools)
library(pander)
sMat=read.table("data/student-mat.csv",sep=",",header=TRUE)
sPor=read.table("data/student-por.csv",sep=",",header=TRUE)
# Según el propietario de los datos, los alumnos que están presentes en ambas asignaturas
# pueden ser identificados por los siguientes atributos
sBoth=merge(sMat,sPor,by=c("school","sex","age","address","famsize","Pstatus","Medu",
"Fedu","Mjob","Fjob","reason","nursery","internet"))
# school, sex, age, address, famsize, Pstatus, Medu, Fedu, Mjob, Fjob, reason, nursery,
# internet, traveltime, studytime, failures, schoolsup, famsup, paid, activities, higher,
# romantic, famrel, freetime, goout, Dalc, Walc, health, absences, subject
sMat$id = paste(sMat$school,sMat$sex,sMat$age,sMat$address,sMat$famsize,sMat$Pstatus,
sMat$Medu,sMat$Fedu,sMat$Mjob,sMat$Fjob,sMat$reason,sMat$nursery,
sMat$internet, sep="-")
sPor$id = paste(sPor$school,sPor$sex,sPor$age,sPor$address,sPor$famsize,sPor$Pstatus,
sPor$Medu,sPor$Fedu,sPor$Mjob,sPor$Fjob,sPor$reason,sPor$nursery,
sPor$internet, sep="-")
sMat$score = rowMeans(subset(sMat, select = c(G1, G2, G3)), na.rm = TRUE)
sMat$mark<-sMat$score
sMat$mark[sMat$score<10] <- "fail"
sMat$mark[sMat$score>=10] <- "pass"
sMat$mark <- as.factor(sMat$mark)
sMat$calification <- sMat$score
sMat$calification[(sMat$score<=20) & (sMat$score>=16)] <- "A"
sMat$calification[(sMat$score<16) & (sMat$score>=14)] <- "B"
sMat$calification[sMat$score<14 & sMat$score>=12] <- "C"
sMat$calification[sMat$score<12 & sMat$score>=10] <- "D"
sMat$calification[sMat$score<10] <- "F"
sMat$calification <- as.factor(sMat$calification)
sPor$score = rowMeans(subset(sPor, select = c(G1, G2, G3)), na.rm = TRUE)
sPor$mark<-sPor$score
sPor$mark[sPor$score<10] <- "fail"
sPor$mark[sPor$score>=10] <- "pass"
sPor$mark <- as.factor(sPor$mark)
sPor$calification <- sPor$score
sPor$calification[(sPor$score<=20) & (sPor$score>=16)] <- "A"
sPor$calification[(sPor$score<16) & (sPor$score>=14)] <- "B"
sPor$calification[sPor$score<14 & sPor$score>=12] <- "C"
sPor$calification[sPor$score<12 & sPor$score>=10] <- "D"
sPor$calification[sPor$score<10] <- "F"
sPor$calification <- as.factor(sPor$calification)
sMat$subject = 'Math'
sPor$subject = 'Portuguese'
students = rbind(sMat,sPor)
students$subject = as.factor(students$subject)
students = transform(students, id=as.numeric(factor(id)))
students$id = as.factor(students$id)
# Resumen
glimpse(students)
nro_factors = 0
nro_numeric = 0
for (i in 1:ncol(students)) {
if (is.factor(students[,i])) nro_factors=nro_factors+1 else nro_numeric=nro_numeric+1
}
# Estadísticas básicas
summary(students)
# Con datos nulos
colSums(is.na(students))
# Con datos ""
colSums(students=="")
colSums(students==0)
# Valores únicos
apply(students,2, function(x) length(unique(x)))
par(mfrow=c(1,3))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
boxplot(students[,i], main = colnames(students)[i], width = 100)
}
}
length(boxplot.stats(students[,c("traveltime")])$out)
students = students[students$traveltime<=3,]
nrow(students[students$freetime==1,])
table(students$famrel)
students$famrel[students$famrel == 1] <- 4
length(boxplot.stats(students[,c("absences")])$out)
boxplot.stats(students[,c("absences")])$out
students[students$absences>=40,]
nrow(students[students$absences>=40,])
students = students[students$absences<40,]
# Agrupación por sexo de los estudiantes
students.male <- students[students$sex == "M",]
students.female <- students[students$sex == "F",]
# Agrupación por si reciben clases particules pagadas o no
students.paid <- students[students$paid == "yes",]
students.nopaid <- students[students$paid == "no",]
# Agrupación por si reciben soporte por parte de la familia
students.famsup <- students[students$famsup == "yes",]
students.nofamsup <- students[students$famsup == "no",]
# Agrupación por si reciben ayuda extra escolar
students.schoolsup <- students[students$schoolsup == "yes",]
students.noschoolsup <- students[students$schoolsup == "no",]
# Agrupación por tiempo dedicado al estudio
students.studytime <- students[students$studytime >= 3,]
students.nostudytime <- students[students$studytime < 3,]
# Agrupación por estudios de los padres
students.parentedu <- students[(students$Medu >= 3) | (students$Fedu >= 3),]
students.parentnoedu <- students[(students$Medu < 3) & (students$Fedu < 3),]
# Agrupación por edad
students.mayores <- students[students$age >= 16,]
students.menores <- students[students$age < 16,]
fig1 = ggplot(students,aes(x=sex,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")
fig2 = ggplot(students,aes(x=sex,fill=calification)) +
geom_bar() +
ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=studytime,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")
fig2 = ggplot(students,aes(x=studytime,fill=calification)) +
geom_bar() +
ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=studytime,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=studytime,fill=calification)) +
geom_bar() +
ylab("Frecuencia") +
facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=schoolsup,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")
fig2 = ggplot(students,aes(x=schoolsup,fill=calification)) +
geom_bar() +
ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=schoolsup,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=schoolsup,fill=calification)) +
geom_bar() +
ylab("Frecuencia") +
facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=paid,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")
fig2 = ggplot(students,aes(x=paid,fill=calification)) +
geom_bar() +
ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=paid,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")+facet_wrap(~sex )
fig2 = ggplot(students,aes(x=paid,fill=calification)) +
geom_bar() +
ylab("Frecuencia") +
facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=famsup,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje")
fig2 = ggplot(students,aes(x=famsup,fill=calification)) +
geom_bar() +
ylab("Frecuencia")
grid.arrange(fig1, fig2, ncol=2)
fig1 = ggplot(students,aes(x=famsup,fill=calification)) +
geom_bar(position="fill") +
ylab("Porcentaje") +
facet_wrap(~sex )
fig2 = ggplot(students,aes(x=famsup,fill=calification)) +
geom_bar() +
ylab("Frecuencia") +
facet_wrap(~sex )
grid.arrange(fig1, fig2, ncol=2)
# Tests de normalidad
library(nortest)
# Función que aplica distintos test de normalidad sobre los datos de entrada
normTest <- function(data, name, alpha = 0.05) {
# Anderson-Darling test
ad_val = (ad.test(data)$p.value > alpha)
# Kolmogorov-Smirnov test
ks_val = (ks.test(data, pnorm, mean(data), sd(data))$p.value > alpha)
# Shapiro test
sh_val = (shapiro.test(data)$p.value > alpha)
# Cramer-von Mises test
csv_val = (cvm.test(data)$p.value > alpha)
return (c(name,ad_val,ks_val,sh_val,csv_val))
}
col.names = colnames(students)
tmat <- matrix(NA, nrow = 0, ncol = 5)
colnames(tmat) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov",
"Shapiro","Cramer-von Mises")
for (i in 1:ncol(students)) {
if (is.integer(students[,i]) | is.numeric(students[,i])) {
normTest(students[,i], col.names[i])
tmat <- rbind(tmat, normTest(students[,i], col.names[i]))
}
}
pander::pander(data.frame(tmat), split.table = 180)
tmat <- matrix(NA, nrow = 0, ncol = 5)
colnames(tmat) <- c("Attribute","Anderson-Darling","Kolmogorov-Smirnov",
"Shapiro","Cramer-von Mises")
tmat <- rbind(tmat, normTest(students.female[,c("score")],"score~female"))
tmat <- rbind(tmat, normTest(students.male[,c("score")],"score~male"))
tmat <- rbind(tmat, normTest(students.studytime[,c("score")],"score~studytime"))
tmat <- rbind(tmat, normTest(students.nostudytime[,c("score")],"score~nostudytime"))
tmat <- rbind(tmat, normTest(students.mayores[,c("score")], "score~mayores"))
tmat <- rbind(tmat, normTest(students.menores[,c("score")], "score~menores"))
tmat <- rbind(tmat, normTest(students.paid[,c("score")], "score~paid"))
tmat <- rbind(tmat, normTest(students.nopaid[,c("score")], "score~nopaid"))
tmat <- rbind(tmat, normTest(students.schoolsup[,c("score")], "score~schoolsup"))
tmat <- rbind(tmat, normTest(students.noschoolsup[,c("score")], "score~noschoolsup"))
tmat <- rbind(tmat, normTest(students.famsup[,c("score")], "score~famsup"))
tmat <- rbind(tmat, normTest(students.nofamsup[,c("score")], "score~nofamsup"))
pander::pander(data.frame(tmat), split.table = 180)
fligner.test(score ~ sex, data = students)
fligner.test(score ~ paid, data = students)
fligner.test(score ~ schoolsup, data = students)
fligner.test(score ~ famsup, data = students)
fligner.test(x = list(students.menores$score,students.mayores$score))
fligner.test(x = list(students.nostudytime$score,students.studytime$score))
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
layout(matrix(c(1,2),1))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
layout(matrix(c(1,2),1))
plotNormHistogram(students.female[,c("score")], "score~sex")
plotNormHistogram(students.male[,c("score")], "score~sex")
plotNormHistogram(students.studytime[,c("score")], "score~studytime")
plotNormHistogram(students.nostudytime[,c("score")], "score~studytime")
plotNormHistogram(students.mayores[,c("score")], "score~mayores")
plotNormHistogram(students.menores[,c("score")], "score~menores")
color=diverge_hcl(length(students$calification))[rank(students$calification)]
pairs(~ G1 + G2 + G3 + score, data=students,pch=19,cex=0.5,lower.panel=NULL,col=color)
title("Correlación notas")
cormat <- matrix(NA, nrow = 0, ncol = 2)
colnames(cormat) <- c("Attribute","spearman")
cormat <- rbind(cormat, c("G1 ~ G2", cor(x = students$G1, y = log10(students$G2), method = "spearman")))
cormat <- rbind(cormat, c("G1 ~ G3", cor(x = students$G1, y = log10(students$G3), method = "spearman")))
cormat <- rbind(cormat, c("G1 ~ score", cor(x = students$G1, y = log10(students$score), method = "spearman")))
cormat <- rbind(cormat, c("G2 ~ G3", cor(x = students$G2, y = log10(students$G3), method = "spearman")))
cormat <- rbind(cormat, c("G2 ~ score", cor(x = students$G2, y = log10(students$score), method = "spearman")))
cormat <- rbind(cormat, c("G3 ~ score", cor(x = students$G3, y = log10(students$score), method = "spearman")))
pander::pander(data.frame(cormat), split.table = 180)
plotNormHistogram <- function(data, name) {
qqnorm(data,main = paste("Normal Q-Q Plot for ",name))
qqline(data,col="red")
hist(data,
main=paste("Histogram for ", name),
xlab=name, freq = FALSE)
}
par(mfrow=c(2,2))
for(i in 1:ncol(students)) {
if (is.numeric(students[,i])){
plotNormHistogram(students[,i], colnames(students)[i])
}
}
